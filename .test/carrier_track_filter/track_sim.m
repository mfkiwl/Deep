%% 跟踪仿真
% 信号为匀加速
% 一级滤波用alpha-beta滤波器,用相位估计频率
% 二级滤波用alpha滤波器,用加速度平滑频率
% 驱动频率只反映二级滤波器的状态,不会干扰一级滤波器的估计
% 二级滤波要想加速,给个大Q
% 更改一级滤波器带宽后应该检查频率估计噪声,再改二级滤波器的R
% 使用卡尔曼滤波代替稳态滤波可以加速初始的收敛过程

clear
clc

%% 仿真时间
T = 40; %总时间
dt1 = 0.001; %一级滤波器更新周期
dt2 = 0.01; %二级滤波器更新周期
n = T/dt1; %数据点数

%% 实际信号参数
a0 = 0.6; %加速度
f0 = 1;   %频率
p0 = 0;   %相位
u = 0.05; %加速度测量噪声标准差
v = 0.01; %相位测量噪声标准差

%% 本地信号参数
a = 0;  %测量的加速度
f1 = 0; %估计频率
f2 = 0; %驱动频率
p = 0;  %相位

%% 一级滤波器
[alpha1, beta1, Bn1, zeta1] = alpha_beta_coef(20, v, dt1);

%% 二级滤波器
[alpha2, Bn2] = alpha_coef(0.1, 0.06, dt2);

%% 计算
output = zeros(n,3);
for k=1:n
    %----实际信号生成
    p0 = p0 + f0*dt1 + 0.5*a0*dt1^2; %相位更新
    f0 = f0 + a0*dt1; %频率更新
    %----本地信号生成
    p = p + f2*dt1; %相位更新,由驱动频率驱动,在时间间隔内认为频率是常值
    f2 = f2 + a*dt1; %更新驱动频率
    f1 = f1 + a*dt1; %更新估计频率
    %----一级滤波(最关键)
    df = f2 - f1; %遗留的频率误差,因为估计频率是f1,理论上应该按f1驱动,但实际按f2驱动
    dp = p - p0 + randn(1)*v; %相位差,估计减测量
    dp = dp - df*dt1; %量测减一步预测
    p = p - df*dt1 - alpha1*dp; %修正相位
    f1 = f2 - df - beta1*dp; %修正频率,f2-df=f1
    %----二级滤波
    if mod(k,dt2/dt1)==0
        df = f2 - f1; %频率误差,估计减测量
        f2 = f2 - alpha2*df; %修正驱动频率
        a = a0 + randn(1)*u; %加速度采样,更新本地加速度
    end
    %----存储
    output(k,1) = p - p0; %相位跟踪误差
    output(k,2) = f1 - f0; %测量频率误差
    output(k,3) = f2 - f0; %驱动频率误差
end